:default            ::= action => [name,values]
:start              ::= project
lexeme default = latm => 1

Header                ~ Encoding 'PBExportHeader$':i rest_of_line
Comment               ~ '$PBExportComments$' rest_of_line
rest_of_line          ~ comment_char*
comment_char          ~ [^\x{A}\x{B}\x{C}\x{D}\x{2028}\x{2029}]
Encoding              ~ 'HA$':i
                      | '$'
pbheader            ::= Header Comment
                      | Header
                      | Comment
pbheader            ::=

project             ::= (pbheader) items    action => project
items               ::= item*               action => [values]
item                ::= exe                 action => [values]
					  | cmp                 action => [values]
					  | com                 action => [values]
					  | des                 action => [values]
					  | cpy                 action => [values]
					  | prd                 action => [values]
					  | pvs                 action => [values]
					  | pvn                 action => [values]
					  | fvs                 action => [values]
					  | fvn                 action => [values]
					  | man                 action => [values]
					  | pbd                 action => [values]
					  | obj                 action => [values]

exe                 ::= ('EXE:') string (',') string (',') integer (',') integer (',') integer
cmp                 ::= ('CMP:') integer (',') integer (',') integer (',') integer (',') integer (',') integer (',') integer
com                 ::= ('COM:') string
des                 ::= ('DES:') string
cpy                 ::= ('CPY:') string
prd                 ::= ('PRD:') string
pvs                 ::= ('PVS:') string
pvn                 ::= ('PVN:') integer (',')  integer (',')  integer (',')  integer
fvs                 ::= ('FVS:') string
fvn                 ::= ('FVN:') integer (',')  integer (',')  integer (',')  integer
man                 ::= ('MAN:') integer (',')  string (',')  integer
pbd                 ::= ('PBD:') string (',') string (',') integer
obj                 ::= ('OBJ:') string (',') string (',') string

integer             ::= [0-9]+				action => integer

string              ::= <string contents>	action => string
string              ::= 					action => string

<string contents>     ~ [^,\x{A}\x{B}\x{C}\x{D}\x{2028}\x{2029}]*

:discard              ~ crlf
crlf                  ~ [\x{D}\x{A}]+
:discard              ~ whitespace
whitespace            ~ [\s]+